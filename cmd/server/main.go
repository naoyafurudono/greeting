package main

import (
	"context"
	"fmt"
	"log"
	"log/slog"

	"connectrpc.com/connect"

	greetv1 "github.com/naoyafurudono/proto-cli/gen/greet/v1"        // generated by protoc-gen-go
	"github.com/naoyafurudono/proto-cli/gen/greet/v1/greetv1connect" // generated by protoc-gen-connect-go
)

type GreetServer struct{}

var _ greetv1connect.GreetServiceHandler = &GreetServer{}

func (s *GreetServer) Hello(
	ctx context.Context,
	req *connect.Request[greetv1.HelloRequest],
) (*connect.Response[greetv1.HelloResponse], error) {
	log.Println("Request headers: ", req.Header())
	res := connect.NewResponse(&greetv1.HelloResponse{
		Greeting: fmt.Sprintf("Hello, %s!", req.Msg.Name),
	})
	res.Header().Set("Greet-Version", "v1")
	return res, nil
}

func main() {
	greeter := &GreetServer{}

	req := connect.NewRequest(&greetv1.HelloRequest{Name: "naoya"})
	res, err := greeter.Hello(context.Background(), req)
	if err != nil {
		slog.Error("fail to greet", slog.Attr{Key: "error", Value: slog.AnyValue(err)})
	}

	fmt.Println(res.Msg.GetGreeting())
}
