package main

import (
	"context"
	"fmt"
	"log"
	"os"

	"connectrpc.com/connect"

	greetv1 "github.com/naoyafurudono/proto-cli/gen/greet/v1"        // generated by protoc-gen-go
	"github.com/naoyafurudono/proto-cli/gen/greet/v1/greetv1connect" // generated by protoc-gen-connect-go
	"github.com/spf13/cobra"
)

// Service implementation

type GreetServer struct{}

var _ greetv1connect.GreetServiceHandler = &GreetServer{}

func (s *GreetServer) Hello(
	ctx context.Context,
	req *connect.Request[greetv1.HelloRequest],
) (*connect.Response[greetv1.HelloResponse], error) {
	log.Println("Request headers: ", req.Header())
	res := connect.NewResponse(&greetv1.HelloResponse{
		Greeting: fmt.Sprintf("Hello, %s!", req.Msg.GetName()),
	})
	res.Header().Set("Greet-Version", "v1")
	return res, nil
}

func (s *GreetServer) Thanks(
	ctx context.Context,
	req *connect.Request[greetv1.ThanksRequest],
) (*connect.Response[greetv1.ThanksResponse], error) {
	log.Println("Request headers: ", req.Header())
	res := connect.NewResponse(&greetv1.ThanksResponse{
		Greeting: fmt.Sprintf("Thanks %s for your %s!", req.Msg.GetName(), req.Msg.GetWhy()),
	})
	res.Header().Set("Greet-Version", "v1")
	return res, nil
}

// CLI implementation

var greetService = &cobra.Command{
	Use:   "great",
	Short: "Important service.",
	Long:  "Important service.",
}

// hello rpc
var greetServiceHello = &cobra.Command{
	Use:   "hello",
	Short: "basic greeting",
	Long:  "basic greeting",
	RunE: func(cmd *cobra.Command, args []string) error {
		greeter := &GreetServer{}

		req := connect.NewRequest(&greetv1.HelloRequest{Name: greetServiceHelloName})
		res, err := greeter.Hello(context.Background(), req)
		if err != nil {
			return err
		}

		fmt.Println(res.Msg.GetGreeting())
		return nil
	},
}
var greetServiceHelloName string

// thanks rpc
var greetServiceThanks = &cobra.Command{
	Use:   "thanks",
	Short: "basic greeting",
	Long:  "basic greeting",
	RunE: func(cmd *cobra.Command, args []string) error {
		greeter := &GreetServer{}

		req := connect.NewRequest(&greetv1.ThanksRequest{Name: greetServiceThanksName, Why: greetServiceThanksWhy})
		res, err := greeter.Thanks(context.Background(), req)
		if err != nil {
			return err
		}

		fmt.Println(res.Msg.GetGreeting())
		return nil
	},
}
var greetServiceThanksName string
var greetServiceThanksWhy string

func init() {
	greetServiceHello.Flags().StringVar(&greetServiceHelloName, "name", "", "")
	greetServiceThanks.Flags().StringVar(&greetServiceThanksName, "name", "", "")
	greetServiceThanks.Flags().StringVar(&greetServiceThanksWhy, "why", "", "")

	greetService.AddCommand(
		greetServiceHello,
		greetServiceThanks,
	)
}

func main() {
	if err := greetService.Execute(); err != nil {
		fmt.Fprintln(os.Stderr, err)
		os.Exit(1)
	}
}
